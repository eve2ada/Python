#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Mon Sep 18 23:37:19 2017

@author: evelyn
"""

'''
 Given an array nums containing n + 1 integers where each integer is between 1 and n 
 (inclusive), prove that at least one duplicate number must exist. Assume that there
 is only one duplicate number, find the duplicate one.

Note:

    You must not modify the array (assume the array is read only).
    You must use only constant, O(1) extra space.
    Your runtime complexity should be less than O(n2).
    There is only one duplicate number in the array, but it could be repeated more 
    than once.

'''
def findDuplicate(nums):
    """
    :type nums: List[int]
    :rtype: int
    """
    n = len(nums)
    if n < 2:
        return None
    
    dic = {}
    for item in nums:
        if item not in dic:
            dic[item] = 1
        else:
            return item
