#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Mon Sep 25 17:31:49 2017

@author: evelyn
"""

'''
Given an array of integers and an integer k, you need to find the total number of 
continuous subarrays whose sum equals to k.

Example 1:

Input:nums = [1,1,1], k = 2
Output: 2

Note:

    The length of the array is in range [1, 20,000].
    The range of numbers in the array is [-1000, 1000] and the range of the integer 
    k is [-1e7, 1e7].

'''
def subarraySum(nums, k):
    """
    :type nums: List[int]
    :type k: int
    :rtype: int
    """
    dic = {0:1}
    ans = 0
    tmpSum = 0
    
    for item in nums:
        tmpSum += item
        ans += dic.get(tmpSum - k, 0)
        dic[tmpSum] = dic.get(tmpSum,0) + 1
    return ans
        
                
