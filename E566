#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Wed Sep 13 19:15:35 2017

@author: evelyn
"""

'''
In MATLAB, there is a very useful function called 'reshape', which can 
reshape a matrix into a new one with different size but keep its original 
data.

You're given a matrix represented by a two-dimensional array, and two 
positive integers r and c representing the row number and column number 
of the wanted reshaped matrix, respectively.

The reshaped matrix need to be filled with all the elements of the original 
matrix in the same row-traversing order as they were.

If the 'reshape' operation with given parameters is possible and legal, 
output the new reshaped matrix; Otherwise, output the original matrix. 
'''
def matrixReshape(nums, r, c):
    """
    :type nums: List[List[int]]
    :type r: int
    :type c: int
    :rtype: List[List[int]]
    """
    n = len(nums)
    m = len(nums[0])
    
    if n*m != r*c:
        return nums
    
    allNum = []
    ans = []
    for i in range(n):
        allNum.extend(nums[i])
    
    cur = 0
    while cur <= r*c - c:
        ans.append(allNum[cur: cur + c])
        cur += c
    
    return ans
            
