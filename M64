#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Tue Sep 26 22:14:33 2017

@author: evelyn
"""

'''
Given a m x n grid filled with non-negative numbers, find a path from top left to 
bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.
'''
def minPathSum(grid):
    """
    :type grid: List[List[int]]
    :rtype: int
    """
    m = len(grid)
    n = len(grid[0])
    
    opt = [[0] * n for _ in range(m)]
    opt[0][0] = grid[0][0]
    
    for i in range(1,m):
        opt[i][0] = opt[i-1][0] + grid[i][0]
    for j in range(1,n):
        opt[0][j] = opt[0][j-1] + grid[0][j]
    
    for i in range(1,m):
        for j in range(1,n):
            opt[i][j] = min(opt[i-1][j], opt[i][j-1]) + grid[i][j]
    
    return opt[-1][-1]
