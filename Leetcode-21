
'''
Merge two sorted linked lists and return it as a new list. 
The new list should be made by splicing together the nodes of the first two lists.
'''
# Definition for singly-linked list.
class ListNode:
    def __init__(self, x):
        self.val = x
        self.next = None

class Solution:
    # @param {ListNode} l1
    # @param {ListNode} l2
    # @return {ListNode}
    def mergeTwoLists(self, l1, l2):
        if [None, None] == [l1,l2]:
            return None
        elif l1 is None:
            return l2
        elif l2 is None:
            return l1
        else:            
            list1 = []
            list2 = []
            temp1 = l1
            temp2 = l2
            while temp1 is not None:
                print 'here1'
                list1.append(temp1.val)
                temp1 = temp1.next
    
            while temp2 is not None:
                print 'here2'
                list2.append(temp2.val)
                temp2 = temp2.next
            
            result = sorted(list1 + list2)
            print result
            index = 0
            list3_node = [0] * len(result)
            while index < len(result):
                list3_node[index] = ListNode(result[index])
                index += 1
            
            for i in range(len(result) - 1):
                (list3_node[i]).next = list3_node[i + 1]
            
            return list3_node[0]
