#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Tue Sep 12 15:14:17 2017

@author: evelyn
"""

'''
Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space? 
'''
def getRow(rowIndex):
    """
    :type rowIndex: int
    :rtype: List[int]
    """
    if rowIndex == 0:
        return [1]
    if rowIndex == 1:
        return [1,1]
    
    last = getRow(rowIndex - 1)
    
    ans = [1]
    
    for i in range(rowIndex - 1):
        ans.append(last[i] + last[i+1])
    
    ans.append(1)
    
    return ans
