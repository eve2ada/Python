'''
Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space? 
'''
def getRow(rowIndex):
    """
    :type rowIndex: int
    :rtype: List[int]
    """
    ans = []
    if rowIndex == 0:
        return [1]
    if rowIndex == 1:
        return [1,1]
    
    last = getRow(rowIndex-1)
    print last
    ans = [1]
    for i in range(len(last)-1):
        ans.append(last[i]+last[i+1])
    ans.append(1)
    
    return ans
