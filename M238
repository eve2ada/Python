#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Sun Sep 10 19:36:40 2017

@author: evelyn
"""

'''
 Given an array of n integers where n > 1, nums, 
 return an array output such that output[i] is equal to the product of all 
 the elements of nums except nums[i].

Solve it without division and in O(n).

For example, given [1,2,3,4], return [24,12,8,6].

Follow up:
Could you solve it with constant space complexity? 
(Note: The output array does not count as extra space for the purpose of 
space complexity analysis.)
'''
def productExceptSelf(nums):
    """
    :type nums: List[int]
    :rtype: List[int]
    """
    n = len(nums)
    output = []

    p = 1
    for i in range(n):
        output.append(p)
        p = p * nums[i]

    q = 1
    for j in range(n-1, -1, -1):
        output[j] = output[j] * q
        q = q * nums[j]

    return output
