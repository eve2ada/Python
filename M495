#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Thu Sep 14 16:49:34 2017

@author: evelyn
"""

'''
 In LOL world, there is a hero called Teemo and his attacking can make his 
 enemy Ashe be in poisoned condition. Now, given the Teemo's attacking 
 ascending time series towards Ashe and the poisoning time duration per 
 Teemo's attacking, you need to output the total time that Ashe is in 
 poisoned condition.

You may assume that Teemo attacks at the very beginning of a specific 
time point, and makes Ashe be in poisoned condition immediately.

Example 1:

Input: [1,4], 2
Output: 4
Explanation: At time point 1, Teemo starts attacking Ashe and makes Ashe be 
poisoned immediately. 
This poisoned status will last 2 seconds until the end of time point 2. 
And at time point 4, Teemo attacks Ashe again, and causes Ashe to be in 
poisoned status for another 2 seconds. 
So you finally need to output 4.

Note:

    You may assume the length of given time series array won't exceed 10000.
    You may assume the numbers in the Teemo's attacking time series and his 
    poisoning time duration per attacking are non-negative integers, which won't exceed 10,000,000.

'''
def findPoisonedDuration(timeSeries, duration):
    """
    :type timeSeries: List[int]
    :type duration: int
    :rtype: int
    """
    n = len(timeSeries)
    if n == 0:
        return 0
    
    ans = 0
    for i in range(n - 1):
        ans += min(duration, timeSeries[i + 1] - timeSeries[i])
    
    return ans + duration
