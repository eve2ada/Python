class Queue(object):
    '''
A queue is basically like a line at Disneyland - you can add elements to a queue, 
and they maintain a specific order. When you want to get something off the end of a queue, 
you get the item that has been in there the longest (this is known as 'first-in-first-out', or FIFO). 
You can read up on queues at Wikipedia if you'd like to learn more.

In your Queue class, you will need three methods:

    __init__: initialize your Queue (think: how will you store the queue's elements? 
    You'll need to initialize an appropriate object attribute in this method)
    insert: inserts one element in your Queue
    remove: removes (or 'pops') one element from your Queue and returns it. 
    If the queue is empty, raises a ValueError.
    '''
    
    def __init__(self):
        '''create an empty list'''
        self.vals = []
    
    def insert(self,e):
        temp = []
        temp.append(e)
        self.vals[:] = temp + self.vals 
        return self.vals
    
    def remove(self):
        try: 
            return self.vals.pop()
        except:
            raise ValueError()
