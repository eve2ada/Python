#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Sun Sep 17 20:54:22 2017

@author: evelyn
"""

'''
 Given a collection of candidate numbers (C) and a target number (T), find all 
 unique combinations in C where the candidate numbers sums to T.

Each number in C may only be used once in the combination.

Note:

    All numbers (including target) will be positive integers.
    The solution set must not contain duplicate combinations.

For example, given candidate set [10, 1, 2, 7, 6, 1, 5] and target 8,
A solution set is:

[
  [1, 7],
  [1, 2, 5],
  [2, 6],
  [1, 1, 6]
]

'''
def combinationSum2(candidates, target):
    """
    :type candidates: List[int]
    :type target: int
    :rtype: List[List[int]]
    """
    ans = []
    candidates.sort()
    
    def dfs(index, remain, path):
        if remain < 0:
            return 
        if remain == 0:
            ans.append(path)
            return
        
        for i in range(index, len(candidates)):
            dfs(i+1, remain - candidates[i], path + [candidates[i]])          
    
    dfs(0, target, [])
    
    return ans
    
