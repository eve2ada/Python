#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Fri Sep 15 17:24:16 2017

@author: evelyn
"""

'''
Given a set of candidate numbers (C) (without duplicates) and a target number (T), find all unique combinations in C where the candidate numbers sums to T.

The same repeated number may be chosen from C unlimited number of times.

Note:

    All numbers (including target) will be positive integers.
    The solution set must not contain duplicate combinations.

For example, given candidate set [2, 3, 6, 7] and target 7,
A solution set is:

[
  [7],
  [2, 2, 3]
]
'''

'''
This is not a passed solution, just for recording
'''
def combinationSum(candidates, target):
    """
    :type candidates: List[int]
    :type target: int
    :rtype: List[List[int]]
    """
    ans = []
    candidates.sort()
    
    def dfs(index, remain, path):   
        print "index = " + str(index)
        print "remain = " + str(remain)
        print "path = " + str(path)
        if remain == 0:
            ans.append(path)
            return
        
        if remain < 0:
            #path[:] = path[:-1]
            return
        
        for i in range(index, len(candidates)):          
            dfs(i, remain-candidates[i], path+[candidates[i]])
    
    dfs(0, target, [])
    return ans
