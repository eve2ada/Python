# 6.00 Problem Set 3
# 
# Hangman game
#

# -----------------------------------
# Helper code
# You don't need to understand this helper code,
# but you will have to know how to use the functions
# (so be sure to read the docstrings!)

import random
import string

WORDLIST_FILENAME = "words.txt"

def loadWords():
    """
    Returns a list of valid words. Words are strings of lowercase letters.
    
    Depending on the size of the word list, this function may
    take a while to finish.
    """
    print "Loading word list from file..."
    # inFile: file
    inFile = open(WORDLIST_FILENAME, 'r', 0)
    # line: string
    line = inFile.readline()
    # wordlist: list of strings
    wordlist = string.split(line)
    print "  ", len(wordlist), "words loaded."
    return wordlist

def chooseWord(wordlist):
    """
    wordlist (list): list of words (strings)

    Returns a word from wordlist at random
    """
    return random.choice(wordlist)

# end of helper code
# -----------------------------------

# Load the list of words into the variable wordlist
# so that it can be accessed from anywhere in the program
wordlist = loadWords()

def isWordGuessed(secretWord, lettersGuessed):
    '''
    secretWord: string, the word the user is guessing
    lettersGuessed: list, what letters have been guessed so far
    returns: boolean, True if all the letters of secretWord are in lettersGuessed;
      False otherwise
    '''
    # FILL IN YOUR CODE HERE...
    list_secretWord = list(secretWord)
    count = 0
    for item in list_secretWord:
        if item in lettersGuessed:
            count += 1
    if count == len(list_secretWord):
        return True
    else:
        return False


def getGuessedWord(secretWord, lettersGuessed):
    '''
    secretWord: string, the word the user is guessing
    lettersGuessed: list, what letters have been guessed so far
    returns: string, comprised of letters and underscores that represents
      what letters in secretWord have been guessed so far.
    '''
    # FILL IN YOUR CODE HERE...
    list_secretWord = list(secretWord)
    count = 0
    for item in list_secretWord:
        if item in lettersGuessed:
            count += 1
        else:
            list_secretWord[count] = '_ '            
            count += 1
            
    return ''.join(list_secretWord)


def getAvailableLetters(lettersGuessed):
    '''
    lettersGuessed: list, what letters have been guessed so far
    returns: string, comprised of letters that represents what letters have not
      yet been guessed.
    '''
    # FILL IN YOUR CODE HERE...
    import string
    all = list(string.ascii_lowercase)
    for item in lettersGuessed:
        if item in all:
            all.remove(item)
    return ''.join(all)
    

def hangman(secretWord):
    secretWord_low = secretWord.lower()
    print 'Welcome to the game, Hangman!'
    length = len(secretWord_low)
    print ('I am thinking of a word that is %d letters long.' % length)
    print '-----------'
    mistakesMade = 0

    lettersGuessed = ''
    while mistakesMade < 8:
        if isWordGuessed(secretWord, lettersGuessed):
            print 'Congratulations, you won!'
            break
        else:
            print 'You have %d guesses left.' % (8 - mistakesMade)
            temp_availableLetters = getAvailableLetters(lettersGuessed)
            print 'Available letters: '+ temp_availableLetters
            getinput = raw_input('Please guess a letter: ')
            getinput = getinput.lower()
            if getinput in lettersGuessed:
                print 'Oops! You\'ve already guessed that letter: ' + getGuessedWord(secretWord, lettersGuessed)
                print '-----------'
            elif getinput in secretWord:
                lettersGuessed = lettersGuessed + str(getinput)
                print 'Good guess: '+ getGuessedWord(secretWord, lettersGuessed)
                print '-----------'
            else:
                #temp_availableLetters = temp_availableLetters.replace(getinput,'')
                lettersGuessed = lettersGuessed + getinput
                print 'Oops! That letter is not in my word: '+ getGuessedWord(secretWord, lettersGuessed)
                print '-----------'
                mistakesMade += 1   
            
    if mistakesMade >= 8:
        print 'Sorry, you ran out of guesses. The word was else. '
