#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Mon Sep 25 15:29:47 2017

@author: evelyn
"""

'''
iven an array consists of non-negative integers, your task is to count the number of 
triplets chosen from the array that can make triangles if we take them as side lengths 
of a triangle.

Example 1:

Input: [2,2,3,4]
Output: 3
Explanation:
Valid combinations are: 
2,3,4 (using the first 2)
2,3,4 (using the second 2)
2,2,3

Note:

    The length of the given array won't exceed 1000.
    The integers in the given array are in the range of [0, 1000].

'''
def triangleNumber(nums):
    """
    :type nums: List[int]
    :rtype: int
    """
    ans = 0
    n = len(nums)
    i = 0
    while i < n-1:
        if nums[i] > 0 and nums[i+1] > 0:
            for j in range(i+2, n):
                print "j = " + str(j)
                if nums[i]+nums[i+1] > nums[j] and nums[i]+nums[j] > nums[i+1] \
                and nums[j]+nums[i+1] > nums[i] and nums[j] > 0:
                    ans += 1
                    print "triangle is "+ str(nums[i]) + " " + str(nums[i+1]) + " " + str(nums[j]) 
            i += 1
    
    return ans
                    
