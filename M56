#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Wed Sep 13 15:06:55 2017

@author: evelyn
"""

'''
Given a collection of intervals, merge all overlapping intervals.

For example,
Given [1,3],[2,6],[8,10],[15,18],
return [1,6],[8,10],[15,18]. 
'''
# Definition for an interval.
class Interval(object):
    def __init__(self, s=0, e=0):
        self.start = s
        self.end = e

class Solution(object):
    def merge(self, intervals):
        """
        :type intervals: List[Interval]
        :rtype: List[Interval]
        """
        ans = []
        intervals.sort(key = lambda interval: interval.start)
        
        for interval in intervals:
            if ans != []:
                if ans[-1].end >= interval.start or ans[-1].end + 1 == interval.start:
                    ans[-1].end = max(interval.end, ans[-1].end)
                else:
                    ans.append(interval)
            else:
                ans.append(interval)
        return ans
