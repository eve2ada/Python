# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def isSymmetric(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        stackL = [root]
        stackR = [root]
        while len(stackL) > 0 and len(stackR) > 0:
            tempL = stackL.pop(0)
            tempR = stackR.pop(0)
            if tempL is None and tempR is None:
                return True
            elif tempL.left == tempL.right == tempR.right == tempR.left == None:
                return True
            elif None in [tempL.left, tempR.right]:
                return False
            elif tempL.left.val != tempR.right.val:
                return False
            else:
                stackL.insert(0, tempL.left)
                stackL.insert(0, tempL.right)
                
                stackR.insert(0, tempR.right)
                stackR.insert(0, tempR.left)
        return True
