#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Thu Sep 14 21:50:36 2017

@author: evelyn
"""

'''
Say you have an array for which the ith element is the price of a given 
stock on day i.

If you were only permitted to complete at most one transaction (ie, buy one 
and sell one share of the stock), design an algorithm to find the maximum 
profit.
Example 1:

Input: [7, 1, 5, 3, 6, 4]
Output: 5

max. difference = 6-1 = 5 (not 7-1 = 6, as selling price needs to be larger 
than buying price)

Example 2:

Input: [7, 6, 4, 3, 1]
Output: 0

In this case, no transaction is done, i.e. max profit = 0.

'''
def maxProfit(prices):
    """
    :type prices: List[int]
    :rtype: int
    """
    
    n = len(prices)
    if n == 0:
        return 0
    
    ans = 0
    buy = 0
    sell = 1

    while buy < n and sell < n:
        if prices[buy] < prices[sell]:
            ans = max(ans, prices[sell] - prices[buy])
            sell += 1
        else:
            buy = sell
            sell += 1
    return ans
