def containsNearbyDuplicate(nums, k):
    #Given an array of integers and an integer k, find out 
    #whether there there are two distinct indices i and j in the array such that nums[i] = nums[j] 
    #and the difference between i and j is at most k. 
 
    if nums == []:
        return False
    elif k == 0:
        return False
    else:
        for i in xrange(len(nums)):
            print 'i =' + str(i)
            for j in xrange(len(nums) - 1, i + 1, -1):
                if nums[i] == nums[j]:
                    if abs(j - i) <= abs(k):
                        return True

        return False


# another optimized implememtation
def containsNearbyDuplicate2(nums, k):
    if nums == []:
        return False
    elif k == 0:
        return False
    else:
        seen = set(nums) #exclude duplicated elements and form new list
        if len(seen) == len(nums):
            return False
        else:
            for i in xrange(len(nums)): # to check every element from the beginning
                if nums[i] in nums[i + 1 :]: # check which element is duplicated from following sub-list
                    if nums.index(nums[i], i + 1) - i <= k: 
                    # once one element is found in following sub-list, and the distance is smaller than k, then return True
                    #for index(), num[i] is the value to be found, i + 1 is the start point
                        return True
            return False
